<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[SQLServer删除重复记录]]></title>
    <url>%2F2019%2F04%2F21%2FSQLServer%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[SQL Server过滤重复记录 有时候业务数据表中直接查询得出的数据可能含有重复的记录，此时就需要我们去过滤一些重复的数据。 根据单个字段（user_id）来进行判断 select * from users where user_id exists(select user_id from users group by user_id having count(user_id) &gt; 1) or select * from users where user_id exists(select user_id from users group by user_id having count(user_id &gt; 1) and row_id not exists(select min(row_id) from users group by user_id having count(user_id) &gt; 1) 根据多个字段进行筛选 select * from users as a where (a.user_id,a.phone exists (select user_id, phone from users group by user_id, phone having count(1) &gt; 1)) or select * from users as a where(a.user_id, a.phone exists (select user_id, phone from users group by user_id, phone having count(1) &gt; 1) and row_id not exists(select min(row_id) from users group by user_id,phone having count(1) &gt; 1) 补充 使用 exists 还是 in 如何选择以上 exists 可按照实际业务进行使用 in 进行替换。in是把外表和内表作hash连接，而exists是对外表作loop循环，每次循环在对内表进行查询。如果查询的两个表大小相当，那么用in和exists差别不大；如果两个表中一个较小一个较大，则子查询表大的用exists，子查询表小的用in【参考：https://www.cnblogs.com/seasons1987/archive/2013/07/03/3169356.html】]]></content>
      <tags>
        <tag>SQL Server</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Will Fine, And You!]]></title>
    <url>%2F2019%2F04%2F15%2F20190415-%E6%97%A5%E5%B8%B8%E9%9A%8F%E7%AC%94%2F</url>
    <content type="text"><![CDATA[Will you date me ? Breath if yes.]]></content>
      <categories>
        <category>日常随笔</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[mysql索引]]></title>
    <url>%2F2019%2F04%2F15%2Fmysql%E7%B4%A2%E5%BC%95%2F</url>
    <content type="text"></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[首个测试分类]]></title>
    <url>%2F2019%2F04%2F14%2F%E5%88%86%E7%B1%BB%2F</url>
    <content type="text"><![CDATA[分类]]></content>
      <categories>
        <category>前端</category>
      </categories>
  </entry>
</search>
